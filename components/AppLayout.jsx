import React, {
  useState,
  isValidElement,
  cloneElement,
  Children,
  useRef,
} from "react";
import Head from "next/head";
import { PopupModal } from "react-calendly";
import AppHeader from "./AppHeader";
import AppFooter from "./AppFooter";

const AppLayout = ({ children }) => {
  const [isCalendlyOpened, setIsCalendlyOpened] = useState(false);
  const modalRef = useRef(<div />);

  function openCalendly() {
    setIsCalendlyOpened(true);
  }

  const childrenWithProps = Children.map(children, (child) => {
    if (isValidElement(child)) {
      return cloneElement(child, { openCalendly });
    }
    return child;
  });

  return (
    <div>
      <Head>
        <title>{"Web3 React Developer - yewyewXD"}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <AppHeader />

      <div
        id="modal"
        className={`absolute h-full w-full ${
          isCalendlyOpened ? "" : "pointer-events-none"
        }`}
        ref={modalRef}
      ></div>
      <PopupModal
        url="https://calendly.com/yewyewxd"
        open={isCalendlyOpened}
        onModalClose={() => {
          setIsCalendlyOpened(false);
        }}
        rootElement={modalRef.current}
      />

      <main>{childrenWithProps}</main>

      <AppFooter />
    </div>
  );
};

export default AppLayout;
